[{"path":"http://dipterix.org/rpyANTs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer.","code":""},{"path":"http://dipterix.org/rpyANTs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Avants, B.B., Tustison, N. Song, G., 2009. Advanced normalization tools (ANTS). Insight Journal, 2(365), pp.1-35. Magnotti, JF, Wang, Z, Beauchamp, MS. RAVE: comprehensive open-source software reproducible analysis visualization intracranial EEG data. NeuroImage, 223, p.117341.","code":"@Article{,   title = {Advanced normalization tools ({ANTS})},   author = {Brian B. Avants and Nick Tustison and {Song} and {Gang}},   journal = {The Insight Journal},   year = {2009},   month = {07},   volume = {2},   number = {365},   pages = {1--35},   doi = {10.54294/uvnhin}, } @Article{,   title = {{RAVE}: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data},   author = {John F. Magnotti and Zhengjia Wang and Michael S. Beauchamp},   journal = {NeuroImage},   year = {2020},   volume = {223},   pages = {117341},   doi = {10.1016/j.neuroimage.2020.117341}, }"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"rpyants","dir":"","previous_headings":"","what":"An Alternative R Package for Advanced Normalization Tools (ANTs)","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"rpyANTs package ports ANTsPy, Python implementation ANTs R using R-Python interpreter package reticulate. Disclaimer: official ANTsR package.","code":""},{"path":"http://dipterix.org/rpyANTs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"installation requires one-line extra setup install_ants creates isolated Python environment managed RAVE. environment conflict affect existing Python installations.","code":"# Install from CRAN install.packages(\"rpyANTs\")  # Install from nightly dev builder # install.packages(\"rpyANTs\", repos = \"https://dipterix.r-universe.dev\")   # set up ANTs rpyANTs::install_ants()"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"load ANTs R, use $ get module functions class members. example: following R code translates Python code R: load imaging data R","code":"library(rpyANTs)  # Whether ANTs is available ants_available()  # Load ANTs into R ants ants$add_noise_to_image #> <ANTs Python Wrapper> #> Help on function add_noise_to_image in module ants.utils.add_noise_to_image: #>  #> add_noise_to_image(image, noise_model, noise_parameters) #>     Add noise to an image using additive Guassian, salt-and-pepper, #>     shot, or speckle noise. #>      #>     ANTsR function: `addNoiseToImage` #>      #>     Arguments #>     --------- #>     image : ANTsImage #>         scalar image. #>      #>     noise_model : string #>         'additivegaussian', 'saltandpepper', 'shot', or 'speckle'. #>      #>     noise_parameters : tuple or array or float #>         'additivegaussian': (mean, standardDeviation) #>         'saltandpepper': (probability, saltValue, pepperValue) #>         'shot': scale #>         'speckle': standardDeviation #>      #>     Returns #>     ------- #>     ANTsImage #>      #>     Example #>     ------- #>     >>> import ants #>     >>> image = ants.image_read(ants.get_ants_data('r16')) #>     >>> noise_image = ants.add_noise_to_image(image, 'additivegaussian', (0.0, 1.0)) #>     >>> noise_image = ants.add_noise_to_image(image, 'saltandpepper', (0.1, 0.0, 100.0)) #>     >>> noise_image = ants.add_noise_to_image(image, 'shot', 1.0) #>     >>> noise_image = ants.add_noise_to_image(image, 'speckle', 1.0) #>  #> *** Above documentation is for Python.  #> *** Please use `$` instead of `.` for modules and functions in R #> <function add_noise_to_image at 0x123a64790> # >>> img = ants.image_read(ants.get_ants_data('r16')) img <- ants$image_read(ants$get_ants_data('r16'))  # >>> noise_image1 = ants.add_noise_to_image(img, 'additivegaussian', (0.0, 1.0)) noise_image1 <- ants$add_noise_to_image(   img, 'additivegaussian',    noise_parameters = tuple(0.0, 1.0) )  # >>> noise_image2 = ants.add_noise_to_image(img, 'saltandpepper', (0.1, 0.0, 100.0)) noise_image2 <- ants$add_noise_to_image(   img, 'saltandpepper',    noise_parameters = tuple(0.1, 0.0, 100.0) )  # >>> noise_image3 = ants.add_noise_to_image(img, 'shot', 1.0) noise_image3 <- ants$add_noise_to_image(   img, 'shot',    noise_parameters = 1.0 )  # >>> noise_image4 = ants.add_noise_to_image(img, 'speckle', 1.0) noise_image4 <- ants$add_noise_to_image(   img, 'speckle',    noise_parameters = 1.0 )  # >>> trans = ants.create_ants_transform( # >>>   dimension=2, matrix=[[0.707, 0.707], [-.707, 0.707]], # >>>   translation=[-53, 128]) trans <- as_ANTsTransform(matrix(   c(0.707, 0.707, -53,     -0.707, 0.707, 128),   nrow = 2, byrow = TRUE ), dimension = 2)   # >>> noise_image4 = trans.apply_to_image(noise_image4) noise_image4 <- trans$apply_to_image(noise_image4) # Use [] to convert ANTsImage into R array is.array(img[]) #> [1] TRUE  # plot via R layout(matrix(c(1,1,2,3,1,1,4,5), nrow = 2, byrow = TRUE)) par(mar = c(0.1, 0.1, 0.1, 0.1), bg = \"black\", fg = \"white\") pal <- grDevices::gray.colors(256, start = 0, end = 1)  image(img[], asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255), ylim = c(1, 0)) image(noise_image1[], asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255), ylim = c(1, 0)) image(noise_image2[], asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255), ylim = c(1, 0)) image(noise_image3[], asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255), ylim = c(1, 0)) image(noise_image4[], asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255), ylim = c(1, 0))"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"upgrade-ants","dir":"","previous_headings":"","what":"Upgrade ANTs","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"upgrade ANTs, first update rpyANTs, upgrade ANTsPyx","code":"install.packages(\"rpyANTs\") rpymat::add_packages(packages = \"antspyx\", pip = TRUE)"},{"path":[]},{"path":"http://dipterix.org/rpyANTs/index.html","id":"rundebug-python-scripts","dir":"","previous_headings":"Advanced use case","what":"Run/Debug Python scripts","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"rpyANTs ports functions allows run Python scripts. example: can also run Python interactive R (yes, correct). Simply run console prefix change > >>>, meaning Python mode: Try Python code! exit Python mode, type exit (parenthesis) hit enter key","code":"library(rpyANTs)  script_path <- tempfile(fileext = \".py\") writeLines(con = script_path, text = r\"(  # This is Python script import ants print(ants.__version__)  )\")  run_script(script_path) rpyANTs::repl_python() > rpyANTs::repl_python() Python 3.8.16 (/Users/dipterix/Library/r-rpymat/miniconda/envs/rpymat-conda-env/bin/python3.8) Reticulate 1.26 REPL -- A Python interpreter in R. Enter 'exit' or 'quit' to exit the REPL and return to R. >>> >>> import ants >>> help(ants.registration) >>> exit >"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"data-conversions","dir":"","previous_headings":"Advanced use case","what":"Data conversions","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"Native R variables can easily converted Python back via r_to_py py_to_r. example can also use variables created R Python vice versa: following example, R object object_r created. Python, can accessed (read-) via r.object_r Similarly, Python object object_py created, can read py$object_py:","code":"# R to Python r_to_py(1) #> 1.0 r_to_py(1L) #> 1  # Python to R py_obj <- py_list(1:3) class(py_obj)  # <- this is a python object #> [1] \"python.builtin.list\"   \"python.builtin.object\"  py_to_r(py_obj) #> [1] 1 2 3 > object_r <- c(1,2,3) > repl_python() Python 3.8.16 (/Users/dipterix/Library/r-rpymat/miniconda/envs/rpymat-conda-env/bin/python3.8) Reticulate 1.26 REPL -- A Python interpreter in R. Enter 'exit' or 'quit' to exit the REPL and return to R. >>> r.object_r [1.0, 2.0, 3.0] >>> import numpy as np >>> object_py = np.array([2,3,4]) >>> exit > py$object_py [1] 2 3 4"},{"path":[]},{"path":"http://dipterix.org/rpyANTs/index.html","id":"variable-types","dir":"","previous_headings":"Known issues","what":"Variable types","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"R type-rigid language. functions ANTsPy require specific variable types often vague R. example dimension argument function ants$create_ants_transform needs integer, R’s default numerical values double. case, variable formats need explicitly given. several examples Explicit integers Tuple, list, dictionary Python tuple vector alter lengths. Similar conversions can done via py_list, py_dict.","code":"# ants$create_ants_transform(dimension = 3)     # <- error ants$create_ants_transform(dimension = 3L)      # < XXXL is an explicit integer # Wrong as `aff_iterations` needs to be a tuple # ants$registration(fixed, moving, ..., aff_iterations = c(6L, 4L, 2L, 1L))  ants$registration(fixed, moving, ..., aff_iterations = tuple(6L, 4L, 2L, 1L))"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"operators","dir":"","previous_headings":"Known issues","what":"Operators","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"Python, operators ANTsImage, img > 5 defined. operators supported R S3 generic functions. Don’t worry don’t know S3 generic, see following examples:  Although operator generics implemented common classes ANTsImage ANTsTransform. Many still development supported. case, might want use following workaround methods. welcome post wish-list issue ticket Github repository Alternative version 1: call operators directly Work-around version 2: don’t know Python operators work, use Python directly","code":"library(rpyANTs) image <- ants$image_read(ants$get_ants_data('mni')) print(image) dim(image) range(image)  y1 <- (image > 10) * 8000  y2 <- image y2[y2 < 10] <- 4000  y3 <- log(image + 1000) y3 <- (y3 - min(y3)) / (max(y3) - min(y3)) * 8000  ants_plot_grid(   list(image, y1, y2, y3),   slices = 100, shape = c(1, 4),   vmin = 0, vmax = 8000 ) library(rpyANTs) image <- ants$image_read(ants$get_ants_data('r16'))  # The followings are the same # threshold <- image > 10 threshold <- image$`__gt__`(10) ants$plot(threshold) library(rpyANTs) image <- ants$image_read(ants$get_ants_data('r16'))  # Create an R variable from Python! py_run_string(\"r.threshold = r.image > 10\", local = TRUE, convert = FALSE) ants$plot(threshold)"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"general citation ANTs: Avants, B.B., Tustison, N. Song, G., 2009. Advanced normalization tools (ANTS). Insight Journal, 2(365), pp.1-35. using rpyANTs RAVE, please also cite: Magnotti, J.F., Wang, Z. Beauchamp, M.S., 2020. RAVE: Comprehensive open-source software reproducible analysis visualization intracranial EEG data. NeuroImage, 223, p.117341.","code":""},{"path":"http://dipterix.org/rpyANTs/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"An Alternative R Package for Advanced Normalization Tools (ANTs)","text":"package rpyANTs released Apache-2.0 license (Copyright: Zhengjia Wang). underlying ANTsPy released Apache-2.0 license (Copyright: ANTs contributors).","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'ANTs' module — ants","title":"Get 'ANTs' module — ants","text":"Get 'ANTs' module","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'ANTs' module — ants","text":"","code":"ants  load_ants(force = FALSE)"},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'ANTs' module — ants","text":"force whether force reloading ants module; default false","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'ANTs' module — ants","text":"'Python' module","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if 'ANTs' is available — ants_available","title":"Check if 'ANTs' is available — ants_available","text":"Check 'ANTs' available","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if 'ANTs' is available — ants_available","text":"","code":"ants_available()"},{"path":"http://dipterix.org/rpyANTs/reference/ants_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if 'ANTs' is available — ants_available","text":"Logical, whether 'ANTs' available","code":""},{"path":[]},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot single 'ANTsImage' — ants_plot","title":"Plot single 'ANTsImage' — ants_plot","text":"Plot single 'ANTsImage'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot single 'ANTsImage' — ants_plot","text":"","code":"ants_plot(   image,   overlay = NULL,   blend = FALSE,   alpha = 1,   cmap = \"Greys_r\",   overlay_cmap = \"turbo\",   overlay_alpha = 0.9,   vminol = NULL,   vmaxol = NULL,   cbar = FALSE,   cbar_length = 0.8,   cbar_dx = 0,   cbar_vertical = TRUE,   axis = 0,   nslices = 12,   slices = NULL,   ncol = NULL,   slice_buffer = NULL,   black_bg = TRUE,   bg_thresh_quant = 0.01,   bg_val_quant = 0.99,   domain_image_map = NULL,   crop = FALSE,   scale = FALSE,   reverse = FALSE,   title = \"\",   title_fontsize = 20,   title_dx = 0,   title_dy = 0,   filename = NULL,   dpi = 500,   figsize = 1.5,   reorient = TRUE,   resample = TRUE,   force_agg = FALSE,   close_figure = TRUE )"},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot single 'ANTsImage' — ants_plot","text":"image 'ANTsImage', something can converted 'ANTsImage' overlay overlay 'ANTsImage', can NULL, optional blend whether blend image overlay; default false cmap, alpha image color map transparency overlay_cmap, overlay_alpha overlay color map transparency vminol, vmaxol find usage cbar whether draw color legend cbar_length, cbar_dx, cbar_vertical legend position size axis see 'Details' nslices, slices, ncol controls slice show slice_buffer performance black_bg, bg_thresh_quant, bg_val_quant controls background domain_image_map optional 'ANTsImage' crop, scale, reverse whether crop, scale, reverse image according background title, title_fontsize, title_dx, title_dy image title filename, dpi, figsize needed saving file reorient whether reorient 'LAI' plotting; default true resample whether resample force_agg whether force graphic engine use 'agg' device; default false close_figure whether close figure returning function","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot single 'ANTsImage' — ants_plot","text":"Nothing","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot single 'ANTsImage' — ants_plot","text":"default, images reoriented 'LAI' orientation plotting. , axis=0, images ordered left side brain right side brain. axis=1, images ordered anterior (front) brain posterior (back) brain. axis=2, images ordered inferior (bottom) brain superior (top) brain.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot single 'ANTsImage' — ants_plot","text":"","code":"if(interactive() && ants_available()) {   ants <- load_ants()   img <- ants$image_read(ants$get_ants_data('mni'))    ants_plot(     img, nslices = 12, black_bg = FALSE,     bg_thresh_quant = 0.05, bg_val_quant = 1.0, axis = 2,     cbar = TRUE, crop = TRUE, reverse = TRUE, cbar_vertical = FALSE,     ncol = 4, title = \"Axial view of MNI brain\"   ) }"},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot multiple 'ANTsImage' — ants_plot_grid","title":"Plot multiple 'ANTsImage' — ants_plot_grid","text":"R-friendly wrapper function ants$plot_grid","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot multiple 'ANTsImage' — ants_plot_grid","text":"","code":"ants_plot_grid(   images,   shape = NULL,   slices = 0,   axes = 2,   figsize = 1,   rpad = 0,   cpad = 0,   vmin = NULL,   vmax = NULL,   colorbar = TRUE,   cmap = \"Greys_r\",   title = \"\",   tfontsize = 20,   title_dx = 0,   title_dy = 0,   rlabels = NULL,   rfontsize = 14,   rfontcolor = \"black\",   rfacecolor = \"white\",   clabels = NULL,   cfontsize = 14,   cfontcolor = \"black\",   cfacecolor = \"white\",   filename = NULL,   dpi = 400,   transparent = TRUE,   ...,   force_agg = FALSE,   close_figure = TRUE )"},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot multiple 'ANTsImage' — ants_plot_grid","text":"images single 'ANTsImage', list, nested list 'ANTsImage' shape shape grid, default using dimensions images slices length one equaling length slices, slice number plot axes 0 'sagittal', 1 'coronal', 2 'axial'; default 2 figsize, rpad, cpad, colorbar, cmap, transparent graphical parameters vmin, vmax value threshold image title title figure title_dx, title_dy, tfontsize controls title margin size rlabels, clabels row column labels rfontsize, rfontcolor, rfacecolor, cfontsize, cfontcolor, cfacecolor row column font size, color, background color filename, dpi parameters save figures ... passed ants$plot_grid; make sure entries named force_agg whether force graphic engine use 'agg' device; default false close_figure whether close figure returning function","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot multiple 'ANTsImage' — ants_plot_grid","text":"Nothing","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_plot_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot multiple 'ANTsImage' — ants_plot_grid","text":"","code":"if(interactive() && ants_available()) {   ants <- load_ants()   image1 <- ants$image_read(ants$get_ants_data('mni'))   image2 <- image1$smooth_image(1.0)   image3 <- image1$smooth_image(2.0)   image4 <- image1$smooth_image(3.0)    ants_plot_grid(     list(image1, image2, image3, image4),     slices = 100, title = \"4x1 Grid\"   )    ants_plot_grid(     list(image1, image2, image3, image4),     shape = c(2, 2),     slices = 100, title = \"2x2 Grid\"   )   ants_plot_grid(     list(image1, image2, image3, image4),     shape = c(2, 2), axes = c(0,1,2,1),     slices = 100, title = \"2x2 Grid (diff. anatomical slices)\"   )  }"},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":null,"dir":"Reference","previous_headings":"","what":"Register two images using 'ANTs' — ants_registration","title":"Register two images using 'ANTs' — ants_registration","text":"Register two images using 'ANTs'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register two images using 'ANTs' — ants_registration","text":"","code":"ants_registration(   fixed,   moving,   type_of_transform = \"SyN\",   initial_transform = NULL,   outprefix = \"\",   mask = NULL,   grad_step = 0.2,   flow_sigma = 3,   total_sigma = 0,   aff_metric = c(\"mattes\", \"GC\", \"meansquares\"),   aff_sampling = 32,   aff_random_sampling_rate = 0.2,   syn_metric = c(\"mattes\", \"CC\", \"meansquares\", \"demons\"),   syn_sampling = 32,   reg_iterations = c(40, 20, 0),   aff_iterations = c(2100, 1200, 1200, 10),   aff_shrink_factors = c(6, 4, 2, 1),   aff_smoothing_sigmas = c(3, 2, 1, 0),   write_composite_transform = FALSE,   verbose = FALSE,   smoothing_in_mm = FALSE,   ... )"},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register two images using 'ANTs' — ants_registration","text":"fixed fixed image register moving image, can character path 'NIfTI' image, 'ANTsImage' instance, 'oro.nifti' object, 'niftiImage' package 'RNifti', 'threeBrain.nii' package 'threeBrain'; see also as_ANTsImage moving moving image mapped fixed space; see also as_ANTsImage type_of_transform linear non-linear registration type; print ants$registration see details initial_transform optional list strings; transforms apply prior registration outprefix output file save results mask image mask; see also as_ANTsImage grad_step, flow_sigma, total_sigma optimization parameters aff_metric metric 'affine' transformation, choices 'GC', 'mattes', 'meansquares' aff_sampling, aff_random_sampling_rate, aff_iterations, aff_shrink_factors, aff_smoothing_sigmas controls 'affine' transform syn_metric metric 'SyN' transformation, choices 'GC', 'mattes', 'meansquares', 'demons' syn_sampling, reg_iterations controls 'SyN' transform write_composite_transform whether composite transform (inverse, exists) written 'HDF5' composite file; default false verbose verbose progress smoothing_in_mm logical, currently impacts low dimensional registration ... others passed ants$registration","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register two images using 'ANTs' — ants_registration","text":"'Python' dictionary aligned images transform files.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register two images using 'ANTs' — ants_registration","text":"","code":"if(interactive() && ants_available()) {    ants <- load_ants()    # check the python documentation here for detailed explanation   print(ants$registration)    # example to register   fi <- ants$image_read(ants$get_ants_data('r16'))   mo <- ants$image_read(ants$get_ants_data('r64'))    # resample to speed up this example   fi <- ants$resample_image(fi, list(60L,60L), TRUE, 0L)   mo <- ants$resample_image(mo, list(60L,60L), TRUE, 0L)    # SDR transform   transform <- ants_registration(     fixed=fi, moving=mo, type_of_transform = 'SyN' )    ants$plot(fi, overlay = transform$warpedmovout, overlay_alpha = 0.3)   }"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data as 'ANTsImage' class — as_ANTsImage","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"Load data 'ANTsImage' class","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"","code":"as_ANTsImage(x, strict = FALSE)"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"x data converted; can 'ANTsImage' instance, character, 'oro.nifti' object, 'niftiImage' package 'RNifti', 'threeBrain.nii' package 'threeBrain' strict whether x NULL","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"'ANTsImage' instance; use ants$ANTsImage see 'Python' documentation","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"","code":"if(interactive() && ants_available()) {    ants <- load_ants()    # Python string   x1 <- ants$get_ants_data('r16')   as_ANTsImage( x1 )    # R character   nii_path <- system.file(package = \"RNifti\",                           \"extdata\", \"example.nii.gz\")   as_ANTsImage( nii_path )    # niftiImage object   x2 <- RNifti::readNifti(nii_path)   as_ANTsImage( x2 )  }"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to 'ANTsTransform' — as_ANTsTransform","title":"Convert to 'ANTsTransform' — as_ANTsTransform","text":"Convert 'ANTsTransform'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to 'ANTsTransform' — as_ANTsTransform","text":"","code":"as_ANTsTransform(x, ...)  # S3 method for default as_ANTsTransform(x, dimension = 3, ...)  # S3 method for ants.core.ants_transform.ANTsTransform as_ANTsTransform(x, ...)  # S3 method for ants.core.ants_image.ANTsImage as_ANTsTransform(x, ...)  # S3 method for numpy.ndarray as_ANTsTransform(x, ...)  # S3 method for character as_ANTsTransform(x, ...)"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to 'ANTsTransform' — as_ANTsTransform","text":"x 'affine' matrix 'numpy' array, character path matrix, 'ANTsTransform', 'ANTsImage' displacement field. ... passed methods dimension expected transform space dimension; default 3","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to 'ANTsTransform' — as_ANTsTransform","text":"'ANTsTransform' object","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to 'ANTsTransform' — as_ANTsTransform","text":"","code":"if(interactive() && ants_available()) {    mat <- matrix(c(     0, -1, 0, 128,     1, 0, 0, -128,     0, 0, -1, 128,     0, 0,  0,   1   ), ncol = 4, byrow = TRUE)    trans <- as_ANTsTransform(mat)   trans    # apply transform   trans$apply_to_point(c(120, 400, 1))    # same results   mat %*% c(120, 400, 1, 1)    trans[] == mat  }"},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":null,"dir":"Reference","previous_headings":"","what":"Install 'ANTs' via 'ANTsPy' — install_ants","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"Install 'ANTs' via 'ANTsPy'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"","code":"install_ants(python_ver = \"auto\", verbose = TRUE)"},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"python_ver 'Python' version, see configure_conda verbose whether print installation messages","code":""},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"function returns nothing.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/is_affine3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","title":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","text":"Check object 3D 'affine' transform matrix","code":""},{"path":"http://dipterix.org/rpyANTs/reference/is_affine3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","text":"","code":"is_affine3D(x, ...)  # S3 method for default is_affine3D(x, strict = TRUE, ...)  # S3 method for ants.core.ants_transform.ANTsTransform is_affine3D(x, ...)"},{"path":"http://dipterix.org/rpyANTs/reference/is_affine3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","text":"x R Python object, accepted forms numeric matrix, 'ANTsTransform', character (path transform matrix) ... passed methods strict whether last element always 1","code":""},{"path":"http://dipterix.org/rpyANTs/reference/is_affine3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","text":"logical value whether object can loaded 4--4 matrix.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/is_affine3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if an object is a 3D 'affine' transform matrix — is_affine3D","text":"","code":"# not affine is_affine3D(1) #> [1] FALSE  # 3x3 matrix is not as it is treated as 2D transform is_affine3D(matrix(rnorm(9), nrow = 3)) #> [1] FALSE  # 3x4 matrix x <- matrix(rnorm(12), nrow = 3) is_affine3D(x) #> [1] TRUE  # 4x4 matrix x <- rbind(x, c(0,0,0,1)) is_affine3D(x) #> [1] TRUE  if(interactive() && ants_available()) {    ants <- load_ants()   x <- ants$new_ants_transform(dimension = 3L)   is_affine3D(x)    # save the parameters   f <- tempfile(fileext = \".mat\")   ants$write_transform(x, f)   is_affine3D(f)  }"},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'Python' main process environment — py","title":"Get 'Python' main process environment — py","text":"Get 'Python' main process environment","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'Python' main process environment — py","text":"","code":"py"},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get 'Python' main process environment — py","text":"object class NULL length 0.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'Python' main process environment — py","text":"'Python' main process module","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_builtin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'Python' built-in object — py_builtin","title":"Get 'Python' built-in object — py_builtin","text":"Get 'Python' built-object","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_builtin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'Python' built-in object — py_builtin","text":"","code":"py_builtin(name, convert = TRUE)"},{"path":"http://dipterix.org/rpyANTs/reference/py_builtin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'Python' built-in object — py_builtin","text":"name object name convert see import_builtins","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_builtin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'Python' built-in object — py_builtin","text":"python built-object specified name","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_builtin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get 'Python' built-in object — py_builtin","text":"","code":"if(interactive() && ants_available()) {   # ------ Basic case: use python `int` as an R function --------- py_int <- py_builtin(\"int\")  # a is an R object now a <- py_int(9) print(a) class(a)  # ------ Use python `int` as a Python function ----------------- py_int2 <- py_builtin(\"int\", convert = FALSE)  # b in a python object b <- py_int2(9)  # There is no '[1] ' when printing print(b) class(b)  # convert to R object py_to_r(b)    }"},{"path":"http://dipterix.org/rpyANTs/reference/py_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List in 'Python' — py_list","title":"List in 'Python' — py_list","text":"List 'Python'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List in 'Python' — py_list","text":"","code":"py_list(..., convert = FALSE)"},{"path":"http://dipterix.org/rpyANTs/reference/py_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List in 'Python' — py_list","text":"... passing list ('Python') convert whether convert results back R; default ","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List in 'Python' — py_list","text":"List instance, R vector converted","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List in 'Python' — py_list","text":"","code":"if(interactive() && ants_available()) {    py_list(list(1,2,3))   py_list(c(1,2,3))    py_list(array(1:9, c(3,3)))   py_list(list(list(1:3), letters[1:3]))  }"},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice index in 'Python' arrays — py_slice","title":"Slice index in 'Python' arrays — py_slice","text":"Slice index 'Python' arrays","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice index in 'Python' arrays — py_slice","text":"","code":"py_slice(...)"},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice index in 'Python' arrays — py_slice","text":"... passing slice ('Python')","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slice index in 'Python' arrays — py_slice","text":"Index slice instance","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slice index in 'Python' arrays — py_slice","text":"","code":"if(interactive() && ants_available()) {    x <- np_array(array(seq(20), c(4, 5)))    # equivalent to x[::2]   x[py_slice(NULL, NULL, 2L)]  }"},{"path":"http://dipterix.org/rpyANTs/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. reticulate import, np_array, np_array, py_bool, py_call, py_del_attr, py_del_item, py_dict, py_eval, py_get_attr, py_get_item, py_help, py_len, py_none, py_run_string, py_set_attr, py_set_item, py_str, py_to_r, py_to_r_wrapper, r_to_py, r_to_py, tuple rpymat repl_python, run_script","code":""},{"path":"http://dipterix.org/rpyANTs/news/index.html","id":"rpyants-001","dir":"Changelog","previous_headings":"","what":"rpyANTs 0.0.1","title":"rpyANTs 0.0.1","text":"Added NEWS.md file track changes package.","code":""}]
