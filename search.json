[{"path":"http://dipterix.org/rpyANTs/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer.","code":""},{"path":"http://dipterix.org/rpyANTs/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Z (2023). rpyANTs: 'ANTs' Package R. R package version 0.0.0.9000, http://dipterix.org/rpyANTs/.","code":"@Manual{,   title = {rpyANTs: 'ANTs' Package in R},   author = {Zhengjia Wang},   year = {2023},   note = {R package version 0.0.0.9000},   url = {http://dipterix.org/rpyANTs/}, }"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"rpyants","dir":"","previous_headings":"","what":"ANTs Package in R","title":"ANTs Package in R","text":"rpyANTs package ports ANTsPy, Python implementation ANTs R using R-Python interpreter package reticulate.","code":""},{"path":"http://dipterix.org/rpyANTs/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ANTs Package in R","text":"installation requires one-line extra setup install_ants creates isolated Python environment managed RAVE. environment conflict affect existing Python installations.","code":"# Install from CRAN install.packages(\"rpyANTs\")  # Install from nightly dev builder # install.packages(\"rpyANTs\", repos = \"https://dipterix.r-universe.dev\")   # set up ANTs rpyANTs::install_ants()"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"ANTs Package in R","text":"load ANTs R, use $ get module functions class members. example: following R code translates Python code R: load imaging data R","code":"library(rpyANTs)  # Whether ANTs is available ants_available()  # Load ANTs into R ants ants$add_noise_to_image #> <ANTs Python Wrapper> #> Help on function add_noise_to_image in module ants.utils.add_noise_to_image: #>  #> add_noise_to_image(image, noise_model, noise_parameters) #>     Add noise to an image using additive Guassian, salt-and-pepper, #>     shot, or speckle noise. #>      #>     ANTsR function: `addNoiseToImage` #>      #>     Arguments #>     --------- #>     image : ANTsImage #>         scalar image. #>      #>     noise_model : string #>         'additivegaussian', 'saltandpepper', 'shot', or 'speckle'. #>      #>     noise_parameters : tuple or array or float #>         'additivegaussian': (mean, standardDeviation) #>         'saltandpepper': (probability, saltValue, pepperValue) #>         'shot': scale #>         'speckle': standardDeviation #>      #>     Returns #>     ------- #>     ANTsImage #>      #>     Example #>     ------- #>     >>> import ants #>     >>> image = ants.image_read(ants.get_ants_data('r16')) #>     >>> noise_image = ants.add_noise_to_image(image, 'additivegaussian', (0.0, 1.0)) #>     >>> noise_image = ants.add_noise_to_image(image, 'saltandpepper', (0.1, 0.0, 100.0)) #>     >>> noise_image = ants.add_noise_to_image(image, 'shot', 1.0) #>     >>> noise_image = ants.add_noise_to_image(image, 'speckle', 1.0) #>  #> *** Above documentation is for Python. Please use `$` in R #> <function add_noise_to_image at 0x14cf2c700> # >>> img = ants.image_read(ants.get_ants_data('r16')) img <- ants$image_read(ants$get_ants_data('r16'))  # >>> noise_image1 = ants.add_noise_to_image(img, 'additivegaussian', (0.0, 1.0)) noise_image1 <- ants$add_noise_to_image(   img, 'additivegaussian',    noise_parameters = tuple(0.0, 1.0) )  # >>> noise_image2 = ants.add_noise_to_image(img, 'saltandpepper', (0.1, 0.0, 100.0)) noise_image2 <- ants$add_noise_to_image(   img, 'saltandpepper',    noise_parameters = tuple(0.1, 0.0, 100.0) )  # >>> noise_image3 = ants.add_noise_to_image(img, 'shot', 1.0) noise_image3 <- ants$add_noise_to_image(   img, 'shot',    noise_parameters = 1.0 )  # >>> noise_image4 = ants.add_noise_to_image(img, 'speckle', 1.0) noise_image4 <- ants$add_noise_to_image(   img, 'speckle',    noise_parameters = 1.0 ) orig_array <- img$numpy() noise_array1 <- noise_image1$numpy() noise_array2 <- noise_image2$numpy() noise_array3 <- noise_image3$numpy() noise_array4 <- noise_image4$numpy()  # plot via R layout(matrix(c(1,1,2,3,1,1,4,5), nrow = 2, byrow = TRUE)) par(mar = c(0.1, 0.1, 0.1, 0.1), bg = \"black\", fg = \"white\") pal <- grDevices::gray.colors(256, start = 0, end = 1)  image(orig_array, asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255)) image(noise_array1, asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255)) image(noise_array2, asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255)) image(noise_array3, asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255)) image(noise_array4, asp = 1, axes = FALSE,        col = pal, zlim = c(0, 255))"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"upgrade-ants","dir":"","previous_headings":"","what":"Upgrade ANTs","title":"ANTs Package in R","text":"upgrade ANTs, first update rpyANTs, upgrade ANTsPyx","code":"install.packages(\"rpyANTs\") rpymat::add_packages(packages = \"antspyx\", pip = TRUE)"},{"path":"http://dipterix.org/rpyANTs/index.html","id":"known-issues","dir":"","previous_headings":"","what":"Known issues","title":"ANTs Package in R","text":"TODO: Integers, numeric TODO: tuple, list, … TODO: class operators TODO: type conversion TODO: documentation","code":""},{"path":"http://dipterix.org/rpyANTs/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"ANTs Package in R","text":"TBA","code":""},{"path":"http://dipterix.org/rpyANTs/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"ANTs Package in R","text":"Apache-2.0","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'ANTs' module — ants","title":"Get 'ANTs' module — ants","text":"Get 'ANTs' module","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'ANTs' module — ants","text":"","code":"ants  load_ants(force = FALSE)"},{"path":"http://dipterix.org/rpyANTs/reference/ants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'ANTs' module — ants","text":"force whether force reloading ants module; default false","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if 'ANTs' is available — ants_available","title":"Check if 'ANTs' is available — ants_available","text":"Check 'ANTs' available","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if 'ANTs' is available — ants_available","text":"","code":"ants_available()"},{"path":[]},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":null,"dir":"Reference","previous_headings":"","what":"Register two images using 'ANTs' — ants_registration","title":"Register two images using 'ANTs' — ants_registration","text":"Register two images using 'ANTs'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register two images using 'ANTs' — ants_registration","text":"","code":"ants_registration(   fixed,   moving,   type_of_transform = \"SyN\",   initial_transform = NULL,   outprefix = \"\",   mask = NULL,   grad_step = 0.2,   flow_sigma = 3,   total_sigma = 0,   aff_metric = c(\"mattes\", \"GC\", \"meansquares\"),   aff_sampling = 32,   aff_random_sampling_rate = 0.2,   syn_metric = c(\"mattes\", \"CC\", \"meansquares\", \"demons\"),   syn_sampling = 32,   reg_iterations = c(40, 20, 0),   aff_iterations = c(2100, 1200, 1200, 10),   aff_shrink_factors = c(6, 4, 2, 1),   aff_smoothing_sigmas = c(3, 2, 1, 0),   write_composite_transform = FALSE,   verbose = FALSE,   smoothing_in_mm = FALSE,   ... )"},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register two images using 'ANTs' — ants_registration","text":"fixed fixed image register moving image, can character path 'NIfTI' image, 'ANTsImage' instance, 'oro.nifti' object, 'niftiImage' package 'RNifti', 'threeBrain.nii' package 'threeBrain'; see also as_ANTsImage moving moving image mapped fixed space; see also as_ANTsImage type_of_transform linear non-linear registration type; print ants$registration see details initial_transform optional list strings; transforms apply prior registration outprefix output file save results mask image mask; see also as_ANTsImage grad_step, flow_sigma, total_sigma optimization parameters aff_metric metric affine transformation, choices 'GC', 'mattes', 'meansquares' aff_sampling, aff_random_sampling_rate, aff_iterations, aff_shrink_factors, aff_smoothing_sigmas controls affine transform syn_metric metric 'SyN' transformation, choices 'GC', 'mattes', 'meansquares', 'demons' syn_sampling, reg_iterations controls 'SyN' transform write_composite_transform whether composite transform (inverse, exists) written 'HDF5' composite file; default false verbose verbose progress smoothing_in_mm logical, currently impacts low dimensional registration ... others passed ants$registration","code":""},{"path":"http://dipterix.org/rpyANTs/reference/ants_registration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register two images using 'ANTs' — ants_registration","text":"","code":"if(interactive() && ants_available()) {    ants <- load_ants()    # check the python documentation here for detailed explanation   print(ants$registration)    # example to register   fi <- ants$image_read(ants$get_ants_data('r16'))   mo <- ants$image_read(ants$get_ants_data('r64'))    # resample to speed up this example   fi <- ants$resample_image(fi, list(60L,60L), TRUE, 0L)   mo <- ants$resample_image(mo, list(60L,60L), TRUE, 0L)    # SDR transform   transform <- ants_registration(     fixed=fi, moving=mo, type_of_transform = 'SyN' )    ants$plot(fi, overlay = transform$warpedmovout, overlay_alpha = 0.3)   }"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data as 'ANTsImage' class — as_ANTsImage","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"Load data 'ANTsImage' class","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"","code":"as_ANTsImage(x, strict = FALSE)"},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"x data converted; can 'ANTsImage' instance, character, 'oro.nifti' object, 'niftiImage' package 'RNifti', 'threeBrain.nii' package 'threeBrain' strict whether x NULL","code":""},{"path":"http://dipterix.org/rpyANTs/reference/as_ANTsImage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data as 'ANTsImage' class — as_ANTsImage","text":"'ANTsImage' instance; use ants$ANTsImage see 'Python' documentation","code":""},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":null,"dir":"Reference","previous_headings":"","what":"Install 'ANTs' via 'ANTsPy' — install_ants","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"Install 'ANTs' via 'ANTsPy'","code":""},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"","code":"install_ants(python_ver = \"auto\", verbose = TRUE)"},{"path":"http://dipterix.org/rpyANTs/reference/install_ants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install 'ANTs' via 'ANTsPy' — install_ants","text":"python_ver 'Python' version, see configure_conda verbose whether print installation messages","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'Python' built-in main module — py","title":"Get 'Python' built-in main module — py","text":"Get 'Python' built-main module","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'Python' built-in main module — py","text":"","code":"py"},{"path":"http://dipterix.org/rpyANTs/reference/py.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get 'Python' built-in main module — py","text":"object class NULL length 0.","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice index in 'Python' arrays — py_slice","title":"Slice index in 'Python' arrays — py_slice","text":"Slice index 'Python' arrays","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice index in 'Python' arrays — py_slice","text":"","code":"py_slice(...)"},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice index in 'Python' arrays — py_slice","text":"... passing slice ('Python')","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Slice index in 'Python' arrays — py_slice","text":"Index slice instance","code":""},{"path":"http://dipterix.org/rpyANTs/reference/py_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Slice index in 'Python' arrays — py_slice","text":"","code":"if(interactive() && ants_available()) {    x <- np_array(array(seq(20), c(4, 5)))    # equivalent to x[::2]   x[py_slice(NULL, NULL, 2L)]  }"},{"path":"http://dipterix.org/rpyANTs/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. reticulate import, np_array, np_array, py_help, tuple rpymat repl_python","code":""}]
